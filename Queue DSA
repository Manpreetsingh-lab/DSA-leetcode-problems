// In queue we will remove the element in queue at front.
// If we want to add new element in queue we will add it at end (rear).

#include <stdio.h>
#include <stdlib.h>

#define MAX 100

int queue[MAX];
int front = -1, rear = -1;

void enqueue(int value)
{
    if (rear == MAX - 1)
        printf("\nQueue is Full\n");
    else
    {
        if (front == -1)
            front = 0;
        rear++;
        queue[rear] = value;
        printf("\nInserted -> %d\n", value);
    }
}

void dequeue()
{
    if (front == -1 || front > rear)
    {
        printf("\nQueue is Empty\n");
    }
    else
    {
        printf("\nDeleted : %d\n", queue[front]);
        front++;
        if (front > rear)
            front = rear = -1;
    }
}

void display()
{
    if (front == -1)
        printf("\nQueue is Empty\n");
    else
    {
        printf("\nQueue elements are:\n");
        for (int i = front; i <= rear; i++)
            printf("%d ", queue[i]);
        printf("\n");
    }
}

int main()
{
    int choice, value;

    while (1)
    {
        printf("\nQueue Menu:\n");
        printf("1. Enqueue\n2. Dequeue\n3. Display\n4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice)
        {
        case 1:
            printf("Enter the value to be enqueue: ");
            scanf("%d", &value);
            enqueue(value);
            break;

        case 2:
            dequeue ();
            break;

        case 3:
            display();
            break;

        case 4:
            exit(0);

        default:
            printf("\nInvalid choice\n");
        }
    }
    return 0;
}
